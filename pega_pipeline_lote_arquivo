#!/bin/bash
servicos=( $(cat $1) )
token=$(cat $HOME/token)
# $2 é o namespace usado. 
cont=0

while  [ $cont -lt ${#servicos[@]} ]
do

nome=( $(curl -s --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects?search=${servicos[$cont]} | jq '.[].name' |  sed 's/"//g' ) )
names=( $(curl -s --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects?search=${servicos[$cont]} | jq '.[].path_with_namespace' |  sed 's/"//g' | awk -F/ '{print $1}' ) ) 
names2=( $(curl -s --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects?search=${servicos[$cont]} | jq '.[].path_with_namespace' |  sed 's/"//g' | awk -F/ '{print $2}' ) ) 
ids=( $(curl -s --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects?search=${servicos[$cont]} | jq '.[].id' ) ) 

i=0
while [ $i -lt ${#names[@]} ]
do
    if [ ${servicos[$cont]} == ${nome[$i]} ]; then 
        if [[ ${names2[$i]} = nio ]]; then
        versao=$(checkVersion.sh ${servicos[$cont]} $2 | awk -F ' ' '{print $2}')
        elif [[ ${names2[$i]} = ejb ]]; then 
        versao=$(checkVersion.sh ${servicos[$cont]} e-$2 | awk -F ' ' '{print $2}')
        elif [[ ${names2[$i]} = brms ]]; then
		case $2 in
			uat2|uat3)
				versao=$(checkVersion.sh ${servicos[$cont]} s-uat | awk -F ' ' '{print $2}');;
			*)
				versao=$(checkVersion.sh ${servicos[$cont]} s-$2 | awk -F ' ' '{print $2}');;
		esac
        fi
    fi
projeto=$(echo ${ids[$i]})
i=$(( $i + 1 ))
done

ver=( $(curl -s  --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects/$projeto/pipelines?per_page=300 | jq '.[].ref' |  sed 's/"//g') )
pipeline=( $(curl -s  --header "Authorization: Bearer $token" -X GET https://gitlab.engdb.com.br/api/v4/projects/$projeto/pipelines?per_page=300 | jq '.[].web_url' |   sed 's/"//g') )

int=0
if [ "$versao" != naoinstalado ];
    then
        while [ "$int" -lt ${#ver[@]} ]
        do
            if [ "$versao" != "${ver[$int]}" ];
            then
            int=$(( $int + 1 ))
            else 
            break 
            fi
        done
fi

if [ "$versao" != naoinstalado ];
then
echo  "Serviço: ${servicos[$cont]} | Versão: $versao | Pipeline: ${pipeline[$int]}" 
else
echo "${servicos[$cont]} $versao"
fi
cont=$(( $cont + 1 ))
done
